version: "3.9"

services:
  app:
    &app
    container_name: chat-system
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        APP_USER_ID: ${APP_USER_ID}
    env_file: .env
    volumes:
      - .:/home/chat-system-user/chat-system
      - ~/.gnupg:/home/chat-system-user/.gnupg
      - bundle:/bundle
      - rails_cache:/home/chat-system-user/chat-system/tmp/cache
      - ~/.gitconfig:/etc/gitconfig
    tmpfs:
      - /tmp/chat-system
    ports:
      - "3000:3000"
    depends_on:
      - development_db
      - test_db
    networks:
      - chat-system_private_network
    entrypoint: [ "/home/chat-system-user/chat-system/docker/entrypoint.sh" ]
    command: [ "rails", "server", "-b", "0.0.0.0", "-p", "3000" ]
    stdin_open: true
    tty: true

  development_db:
    &development_db
    container_name: chat-system_development_db
    image: mysql:8.0
    env_file: .env
    ports:
      - "3306:3306"
    volumes:
      - development_db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DEVELOPMENT_DB_NAME}
      MYSQL_USER: ${DEVELOPMENT_DB_USERNAME}
      MYSQL_PASSWORD: ${DEVELOPMENT_DB_PASSWORD}
    networks:
      - chat-system_private_network
    restart: always

  test_db:
    <<: *development_db
    container_name: chat-system_test_db
    ports: [ ]
    environment:
      MYSQL_DATABASE: ${TEST_DB_NAME}
      MYSQL_USER: ${TEST_DB_USERNAME}
      MYSQL_PASSWORD: ${TEST_DB_PASSWORD}
    volumes:
      - test_db:/var/lib/mysql

  redis:
    image: redis:7.0.12-alpine
    container_name: chat-system_redis
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-16379}:6379"
    env_file: .env
    restart: always
    networks:
      - chat-system_private_network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: chat-system-elasticsearch
    environment:
      discovery.type: single-node
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - chat-system_private_network
    
  worker:
    <<: *app
    container_name: chat-system_worker
    command: bash -c "bundle install && bundle exec sidekiq"
    depends_on:
      - redis
      - app
    ports: [ ]
    entrypoint: ""

volumes:
  bundle:
  rails_cache:
  redis_data:
  node_modules:
  development_db:
  test_db:
  es_data:


networks:
  chat-system_private_network:
    external: true
